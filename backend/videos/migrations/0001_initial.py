# Generated by Django 5.2.5 on 2025-08-22 15:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=64, verbose_name='Название')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Описание')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails', verbose_name='Превью')),
                ('src', models.FileField(null=True, upload_to='videos', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4'])], verbose_name='Видео')),
                ('duration', models.CharField(blank=True, max_length=20, null=True, verbose_name='Длительность')),
                ('hls', models.CharField(blank=True, max_length=500, null=True, verbose_name='HLS')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Completed', 'Completed')], default='Pending', max_length=20, verbose_name='Статус')),
                ('is_running', models.BooleanField(default=False, verbose_name='В обработке')),
                ('views', models.PositiveBigIntegerField(default=0, verbose_name='Количество просмотров')),
                ('baseStars', models.PositiveBigIntegerField(default=0, verbose_name='Количество звёзд')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
                ('video_embedding', models.JSONField(blank=True, null=True, verbose_name='Эмбеддинг видео')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_videos', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
            },
        ),
        migrations.CreateModel(
            name='CommentVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Контент')),
                ('baseStars', models.PositiveBigIntegerField(default=0, verbose_name='Количество звёзд')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='videos.commentvideo', verbose_name='Родительский комментарий')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_comments', to='videos.video', verbose_name='Видео')),
            ],
            options={
                'verbose_name': 'Комментарий-Видео',
                'verbose_name_plural': 'Коментарии-Видео',
            },
        ),
        migrations.CreateModel(
            name='UserCommentRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.BooleanField(choices=[(0, 'Без оценки'), (1, 'С оценкой')], default=0, verbose_name='Оценка')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_rates', to='videos.commentvideo', verbose_name='Комментарий')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользователь-комментарий',
                'verbose_name_plural': 'Пользователи-комментарии',
                'unique_together': {('comment', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserVideoRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.BooleanField(choices=[(0, 'Без оценки'), (1, 'С оценкой')], default=0, verbose_name='Оценка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Зритель')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_rates', to='videos.video', verbose_name='Видео')),
            ],
            options={
                'verbose_name': 'Пользователь-видео',
                'verbose_name_plural': 'Пользователи-видео',
                'unique_together': {('video', 'user')},
            },
        ),
        migrations.CreateModel(
            name='WatchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watch_time', models.DateTimeField(auto_now_add=True, verbose_name='Время просмотра')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='videos.video', verbose_name='Видео')),
                ('viewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='watch_history', to=settings.AUTH_USER_MODEL, verbose_name='Зритель')),
            ],
            options={
                'verbose_name': 'Просмотр',
                'verbose_name_plural': 'История просмотров',
                'db_table': 'users_watchhistory',
                'unique_together': {('viewer', 'video')},
            },
        ),
    ]
