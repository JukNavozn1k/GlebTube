import type { Video } from "@/types/video"
import { Api } from "@/api/api"
import api from "@/api/client" 

export class VideoApi extends Api<Video> {
  constructor() {
    super("video", api) // –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –ø—Ä–æ–ø–∏—Å–∞–Ω–∞ –æ–¥–∏–Ω —Ä–∞–∑
  }

  /**
   * Create a new video.
   * Accepts only the required fields for POST: title, description, thumbnail, src
   */
  async createVideo(data: { title: string; description: string; thumbnail: string; src: string }): Promise<Video> {
    const res = await this.apiClient.post<Video>(`/${this.prefix}/`, data)
    return res.data
  }

  /**
   * Update an existing video (partial fields allowed): title, description, thumbnail
   */
  async updateVideo(id: string, data: { title?: string; description?: string; thumbnail?: string }): Promise<Video> {
    const res = await this.apiClient.put<Video>(`/${this.prefix}/${id}`, data)
    return res.data
  }

  // —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –±–∞–∑–æ–≤—ã–º–∏ create/update
  async create(data: unknown): Promise<Video> {
    return this.createVideo(data as { title: string; description: string; thumbnail: string; src: string })
  }

  async update(id: string, data: unknown): Promise<Video> {
    return this.updateVideo(id, data as { title?: string; description?: string; thumbnail?: string })
  }
}

// üëâ –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞—ë—Ç—Å—è 1 —Ä–∞–∑ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è
export const videoApi = new VideoApi()
