version: "3.0"
services:
  backend:
    build: 
      context: ./backend
    env_file:
      - .env
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}  # This is the service name defined in docker-compose.yml
      DB_PORT: ${DB_PORT}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    volumes:
      - ./backend:/backend
      - ./backend/media:/backend/media
      - ./backend/staticfiles:/backend/staticfiles
    depends_on:
      - db
    command: > 
      sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --workers 2 --bind 0.0.0.0:8000 GlebTube.wsgi"

  db:
    image: postgres:16.3-alpine3.20
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      PGPORT : ${DB_PORT}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.5-alpine
    hostname: redis

  worker:
    build: 
      context: ./backend
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./backend/:/backend
    links: 
      - redis
    depends_on:
      - redis
      - db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      PGPORT : ${DB_PORT}
      POSTGRES_PASSWORD: ${DB_PASS}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    working_dir: /frontend
    env_file:
      - .env
    environment:
      - VITE_APP_API_URL=${VITE_APP_API_URL}
    volumes:
      - ./frontend:/frontend
      - ./frontend/dist:/frontend/dist
    command: sh -c "npm ci && npm run build && tail -f /dev/null"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./backend/media:/backend/media:ro
      - ./backend/staticfiles:/backend/staticfiles:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: