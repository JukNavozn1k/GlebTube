version: "3.0"
services:
  backend:
    build: 
      context: ./backend
    env_file:
      - .env
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/backend
    depends_on:
      - db
    command: > 
      sh -c "python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/frontend:delegated
      - /frontend/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    restart: unless-stopped

    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  db:
    image: postgres:16.3-alpine3.20
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.5-alpine
    hostname: redis

  worker:
    build: 
      context: ./backend
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./backend/:/backend
    depends_on:
      - redis
      - db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}

  beat:
    build:
      context: ./backend
    hostname: beat
    entrypoint: celery
    command: -A celery_app.app beat --loglevel=info
    volumes:
      - ./backend/:/backend
    depends_on:
      - redis
      - db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}

  flower:
    build:
      context: ./backend
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - worker
    env_file:
      - .env

volumes:
  postgres_data:
